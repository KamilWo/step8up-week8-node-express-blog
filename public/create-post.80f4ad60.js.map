{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,SCEA,MAAM,EAAW,SAAS,cAAc,CAAC,aACnC,EAAsB,SAAS,cAAc,CAAC,wBAC9C,EAAe,SAAS,cAAc,CAAC,cAK7C,eAAe,IACb,GAAI,CACF,IAAM,EAAa,MAAM,EAAzB,aAAA,EACA,CAAA,EAAoB,SAAS,CAAG,GAChC,EAAW,OAAO,CAAC,AAAC,IAClB,IAAM,EAAkB,SAAS,aAAa,CAAC,MAC/C,CAAA,EAAgB,SAAS,CAAG,gBAC5B,EAAgB,SAAS,CAAG;AACU,4CAAA,EAAE,EAAS,EAAE,CAAC,4BAA4B,EAAE,EAAS,EAAE,CAAC;AACvE,6BAAA,EAAE,EAAS,EAAE,CAAC,EAAE,EAAE,EAAS,IAAI,CAAC;AACvD,MAAA,CAAC,CACD,EAAoB,WAAW,CAAC,EAClC,EACF,CAAE,MAAO,EAAO,CACd,EAAoB,SAAS,CAAG,6BAChC,QAAQ,KAAK,CAAC,4BAA6B,EAC7C,CACF,CAKA,EAAS,gBAAgB,CAAC,SAAU,MAAO,IACzC,EAAE,cAAc,GAChB,EAAa,KAAK,CAAC,OAAO,CAAG,OAE7B,IAAM,EAAW,IAAI,SAAS,GACxB,EAAQ,EAAS,GAAG,CAAC,SACrB,EAAU,EAAS,GAAG,CAAC,WACvB,EAAc,EAAS,MAAM,CAAC,eAEpC,GAAI,CACc,MAAM,EAAA,UAAA,CAAe,CAAE,MAAA,EAAO,QAAA,EAAS,YAAA,CAAY,GAEnE,OAAO,QAAQ,CAAC,IAAI,CAAG,GACzB,CAAE,MAAO,EAAO,CACd,EAAa,WAAW,CAAG,EAAM,OAAO,CACxC,EAAa,KAAK,CAAC,OAAO,CAAG,OAC/B,CACF,GAGA,SAAS,gBAAgB,CAAC,mBAAoB,KAC5C,GACF","sources":["<anon>","src/client/assets/js/post-form.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire6684\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire6684\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $e1C8v = parcelRequire(\"e1C8v\");\nconst $ec20bab3ea3d9aa0$var$postForm = document.getElementById(\"post-form\");\nconst $ec20bab3ea3d9aa0$var$categoriesContainer = document.getElementById(\"categories-container\");\nconst $ec20bab3ea3d9aa0$var$errorMessage = document.getElementById(\"form-error\");\n/**\n * Fetches categories and populates them as checkboxes in the form.\n */ async function $ec20bab3ea3d9aa0$var$loadCategories() {\n    try {\n        const categories = await $e1C8v.getCategories();\n        $ec20bab3ea3d9aa0$var$categoriesContainer.innerHTML = \"\"; // Clear loader/previous content\n        categories.forEach((category)=>{\n            const checkboxWrapper = document.createElement(\"div\");\n            checkboxWrapper.className = \"checkbox-item\";\n            checkboxWrapper.innerHTML = `\n        <input type=\"checkbox\" id=\"category-${category.id}\" name=\"categoryIds\" value=\"${category.id}\">\n        <label for=\"category-${category.id}\">${category.name}</label>\n      `;\n            $ec20bab3ea3d9aa0$var$categoriesContainer.appendChild(checkboxWrapper);\n        });\n    } catch (error) {\n        $ec20bab3ea3d9aa0$var$categoriesContainer.innerHTML = \"Could not load categories.\";\n        console.error(\"Failed to load categories\", error);\n    }\n}\n/**\n * Handles the form submission for creating a new post.\n */ $ec20bab3ea3d9aa0$var$postForm.addEventListener(\"submit\", async (e)=>{\n    e.preventDefault();\n    $ec20bab3ea3d9aa0$var$errorMessage.style.display = \"none\";\n    const formData = new FormData($ec20bab3ea3d9aa0$var$postForm);\n    const title = formData.get(\"title\");\n    const content = formData.get(\"content\");\n    const categoryIds = formData.getAll(\"categoryIds\"); // Gets all checked category IDs\n    try {\n        const newPost = await $e1C8v.createPost({\n            title: title,\n            content: content,\n            categoryIds: categoryIds\n        });\n        // Redirect to the new post's page or the homepage\n        window.location.href = `/`; // Or use `/post.html?id=${newPost.id}`\n    } catch (error) {\n        $ec20bab3ea3d9aa0$var$errorMessage.textContent = error.message;\n        $ec20bab3ea3d9aa0$var$errorMessage.style.display = \"block\";\n    }\n});\n// Initial setup when the page loads\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    $ec20bab3ea3d9aa0$var$loadCategories();\n});\n\n\n//# sourceMappingURL=create-post.80f4ad60.js.map\n","import * as api from \"./api.js\";\n\nconst postForm = document.getElementById(\"post-form\");\nconst categoriesContainer = document.getElementById(\"categories-container\");\nconst errorMessage = document.getElementById(\"form-error\");\n\n/**\n * Fetches categories and populates them as checkboxes in the form.\n */\nasync function loadCategories() {\n  try {\n    const categories = await api.getCategories();\n    categoriesContainer.innerHTML = \"\"; // Clear loader/previous content\n    categories.forEach((category) => {\n      const checkboxWrapper = document.createElement(\"div\");\n      checkboxWrapper.className = \"checkbox-item\";\n      checkboxWrapper.innerHTML = `\n        <input type=\"checkbox\" id=\"category-${category.id}\" name=\"categoryIds\" value=\"${category.id}\">\n        <label for=\"category-${category.id}\">${category.name}</label>\n      `;\n      categoriesContainer.appendChild(checkboxWrapper);\n    });\n  } catch (error) {\n    categoriesContainer.innerHTML = \"Could not load categories.\";\n    console.error(\"Failed to load categories\", error);\n  }\n}\n\n/**\n * Handles the form submission for creating a new post.\n */\npostForm.addEventListener(\"submit\", async (e) => {\n  e.preventDefault();\n  errorMessage.style.display = \"none\";\n\n  const formData = new FormData(postForm);\n  const title = formData.get(\"title\");\n  const content = formData.get(\"content\");\n  const categoryIds = formData.getAll(\"categoryIds\"); // Gets all checked category IDs\n\n  try {\n    const newPost = await api.createPost({ title, content, categoryIds });\n    // Redirect to the new post's page or the homepage\n    window.location.href = `/`; // Or use `/post.html?id=${newPost.id}`\n  } catch (error) {\n    errorMessage.textContent = error.message;\n    errorMessage.style.display = \"block\";\n  }\n});\n\n// Initial setup when the page loads\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  loadCategories();\n});\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$e1C8v","$ec20bab3ea3d9aa0$var$postForm","document","getElementById","$ec20bab3ea3d9aa0$var$categoriesContainer","$ec20bab3ea3d9aa0$var$errorMessage","$ec20bab3ea3d9aa0$var$loadCategories","categories","getCategories","innerHTML","forEach","category","checkboxWrapper","createElement","className","name","appendChild","error","console","addEventListener","e","preventDefault","style","display","formData","FormData","title","get","content","categoryIds","getAll","createPost","window","location","href","textContent","message"],"version":3,"file":"create-post.80f4ad60.js.map"}