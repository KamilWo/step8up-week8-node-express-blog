{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,ECGA,eAAe,EAAQ,CAAG,CAAE,EAAU,CAAC,CAAC,EACtC,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,AALhB,OAK2B,EAAK,GAC7C,GAAI,CAAC,EAAS,EAAE,CAAE,CAChB,IAAM,EAAY,MAAM,EAAS,IAAI,EACrC,OAAM,AAAI,MAAM,EAAU,OAAO,EAAI,4BACvC,CACA,GAAI,AAAoB,MAApB,EAAS,MAAM,CACjB,OAAO,KAET,OAAO,EAAS,IAAI,EACtB,CAAE,MAAO,EAAO,CAEd,MADA,QAAQ,KAAK,CAAC,qBAAsB,GAC9B,CACR,CACF,C,E,E,O,C,Q,I,G,E,E,O,C,W,I,G,E,E,O,C,S,I,G,E,E,O,C,W,I,G,E,E,O,C,a,I,G,E,E,O,C,c,I,G,E,E,O,C,a,I,G,E,E,O,C,gB,I,GAGO,IAAM,EAAQ,CAAC,EAAO,IAAa,EAAQ,cAAe,CAC/D,OAAQ,OACR,QAAS,CAAC,eAAgB,kBAAkB,EAC5C,KAAM,KAAK,SAAS,CAAC,CAAC,MAAA,EAAO,SAAA,CAAQ,EACvC,GAEa,EAAW,CAAC,EAAU,EAAO,IAAa,EAAQ,iBAAkB,CAC/E,OAAQ,OACR,QAAS,CAAC,eAAgB,kBAAkB,EAC5C,KAAM,KAAK,SAAS,CAAC,CAAC,SAAA,EAAU,MAAA,EAAO,SAAA,CAAQ,EACjD,GAEa,EAAS,IAAM,EAAQ,eAAgB,CAAC,OAAQ,MAAM,GAGtD,EAAW,CAAC,EAAa,IAAI,GAEjC,EADK,EAAa,CAAC,gBAAgB,EAAE,EAAA,CAAY,CAAG,UAIhD,EAAa,AAAC,GACzB,EAAQ,SAAU,CAChB,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,SAAS,CAAC,EACvB,GAEW,EAAc,AAAC,GAAW,EAAQ,CAAC,OAAO,EAAE,EAAA,CAAQ,EAEpD,EAAa,CAAC,EAAQ,IACjC,EAAQ,CAAC,OAAO,EAAE,EAAA,CAAQ,CAAE,CAC1B,OAAQ,MACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,SAAS,CAAC,EACvB,GAGW,EAAgB,IAAM,EAAQ,c,G,I,E,E,SCX3C,SAAS,gBAAgB,CAAC,mBAAoB,MAC5C,AAlCF,WAEE,IAAM,EAAU,SAAS,cAAc,CAAC,kBACxC,GAAI,CAAC,EAAS,OAEd,IAAM,EAAO,AAbf,WACE,IAAM,EAAO,eAAe,OAAO,CAAC,QACpC,OAAO,EAAO,KAAK,KAAK,CAAC,GAAQ,IACnC,IAYM,GAEF,EAAQ,SAAS,CAAG;A;AAEO,+BAAA,EAAE,EAAK,QAAQ,CAAC;A;A;AAG3C,IAAA,CAAC,CAED,SACG,cAAc,CAAC,cACf,gBAAgB,CAAC,QAAS,UACzB,MAAM,EAAN,MAAA,GACA,eAAe,UAAU,CAAC,QAC1B,OAAO,QAAQ,CAAC,IAAI,CAAG,GACzB,IAGF,EAAQ,SAAS,CAAG;A;A;AAGpB,IAAA,CAAC,AAEL,GAKA","sources":["<anon>","src/client/assets/js/api.js","src/client/assets/js/layout.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire6684\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire6684\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"e1C8v\", function(module, exports) {\n\n$parcel$export(module.exports, \"login\", () => $a35ebdc10bcdb39c$export$596d806903d1f59e);\n$parcel$export(module.exports, \"register\", () => $a35ebdc10bcdb39c$export$6503ec6e8aabbaf);\n$parcel$export(module.exports, \"logout\", () => $a35ebdc10bcdb39c$export$a0973bcfe11b05c9);\n$parcel$export(module.exports, \"getPosts\", () => $a35ebdc10bcdb39c$export$3790dc04c854c4c9);\n$parcel$export(module.exports, \"createPost\", () => $a35ebdc10bcdb39c$export$e1bef8d96c7ba086);\n$parcel$export(module.exports, \"getPostById\", () => $a35ebdc10bcdb39c$export$101f7e1827697acc);\n$parcel$export(module.exports, \"updatePost\", () => $a35ebdc10bcdb39c$export$431458ae9af46678);\n$parcel$export(module.exports, \"getCategories\", () => $a35ebdc10bcdb39c$export$7a0f33e8df10bd94);\nconst $a35ebdc10bcdb39c$var$BASE_URL = '/api';\n// Generic fetch function\nasync function $a35ebdc10bcdb39c$var$request(url, options = {}) {\n    try {\n        const response = await fetch($a35ebdc10bcdb39c$var$BASE_URL + url, options);\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.message || 'An unknown error occurred');\n        }\n        if (response.status === 204) return null;\n        return response.json();\n    } catch (error) {\n        console.error('API request error:', error);\n        throw error;\n    }\n}\nconst $a35ebdc10bcdb39c$export$596d806903d1f59e = (email, password)=>$a35ebdc10bcdb39c$var$request('/auth/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email: email,\n            password: password\n        })\n    });\nconst $a35ebdc10bcdb39c$export$6503ec6e8aabbaf = (username, email, password)=>$a35ebdc10bcdb39c$var$request('/auth/register', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            username: username,\n            email: email,\n            password: password\n        })\n    });\nconst $a35ebdc10bcdb39c$export$a0973bcfe11b05c9 = ()=>$a35ebdc10bcdb39c$var$request('/auth/logout', {\n        method: 'POST'\n    });\nconst $a35ebdc10bcdb39c$export$3790dc04c854c4c9 = (categoryId = null)=>{\n    const url = categoryId ? `/posts?category=${categoryId}` : '/posts';\n    return $a35ebdc10bcdb39c$var$request(url);\n};\nconst $a35ebdc10bcdb39c$export$e1bef8d96c7ba086 = (postData)=>$a35ebdc10bcdb39c$var$request(\"/posts\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(postData)\n    });\nconst $a35ebdc10bcdb39c$export$101f7e1827697acc = (postId)=>$a35ebdc10bcdb39c$var$request(`/posts/${postId}`);\nconst $a35ebdc10bcdb39c$export$431458ae9af46678 = (postId, postData)=>$a35ebdc10bcdb39c$var$request(`/posts/${postId}`, {\n        method: \"PUT\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(postData)\n    });\nconst $a35ebdc10bcdb39c$export$7a0f33e8df10bd94 = ()=>$a35ebdc10bcdb39c$var$request(\"/categories\");\n\n});\n\n\nvar $e1C8v = parcelRequire(\"e1C8v\");\n/**\n * Checks session storage for logged-in user data.\n * @returns {object|null} The user object or null.\n */ function $faccf8cc833cb81b$var$getLoggedInUser() {\n    const user = sessionStorage.getItem(\"user\");\n    return user ? JSON.parse(user) : null;\n}\n/**\n * Updates the header's navigation with either user info or login/register buttons.\n */ function $faccf8cc833cb81b$var$updateHeaderNav() {\n    // This targets a new, specific element in the header for dynamic content\n    const userNav = document.getElementById(\"user-nav-links\");\n    if (!userNav) return;\n    const user = $faccf8cc833cb81b$var$getLoggedInUser();\n    if (user) {\n        // If a user is logged in, show their name and a logout button\n        userNav.innerHTML = `\n      <div class=\"user-menu\">\n        <span class=\"username\">${user.username}</span>\n        <button id=\"logout-btn\" class=\"btn btn-primary\">Logout</button>\n      </div>\n    `;\n        // Add the event listener for the newly created logout button\n        document.getElementById(\"logout-btn\").addEventListener(\"click\", async ()=>{\n            await $e1C8v.logout();\n            sessionStorage.removeItem(\"user\");\n            window.location.href = \"/\"; // Redirect to home after logout\n        });\n    } else // If no user is logged in, show the login and register buttons\n    userNav.innerHTML = `\n      <a href=\"./login.html\" class=\"btn btn-primary\">Login</a>\n      <a href=\"./register.html\" class=\"btn btn-primary\">Register</a>\n    `;\n}\n// When the page content is loaded, run the function to update the header.\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    $faccf8cc833cb81b$var$updateHeaderNav();\n});\n\n\n//# sourceMappingURL=about.88d406c7.js.map\n","const BASE_URL = '/api';\n\n// Generic fetch function\nasync function request(url, options = {}) {\n  try {\n    const response = await fetch(BASE_URL + url, options);\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'An unknown error occurred');\n    }\n    if (response.status === 204) { // No Content\n      return null;\n    }\n    return response.json();\n  } catch (error) {\n    console.error('API request error:', error);\n    throw error;\n  }\n}\n\n// Auth API\nexport const login = (email, password) => request('/auth/login', {\n  method: 'POST',\n  headers: {'Content-Type': 'application/json'},\n  body: JSON.stringify({email, password}),\n});\n\nexport const register = (username, email, password) => request('/auth/register', {\n  method: 'POST',\n  headers: {'Content-Type': 'application/json'},\n  body: JSON.stringify({username, email, password}),\n});\n\nexport const logout = () => request('/auth/logout', {method: 'POST'});\n\n// Posts API\nexport const getPosts = (categoryId = null) => {\n  const url = categoryId ? `/posts?category=${categoryId}` : '/posts';\n  return request(url);\n};\n\nexport const createPost = (postData) =>\n  request(\"/posts\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(postData),\n  });\n\nexport const getPostById = (postId) => request(`/posts/${postId}`);\n\nexport const updatePost = (postId, postData) =>\n  request(`/posts/${postId}`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(postData),\n  });\n\n// Categories API\nexport const getCategories = () => request(\"/categories\");\n","import * as api from \"./api.js\";\n\n/**\n * Checks session storage for logged-in user data.\n * @returns {object|null} The user object or null.\n */\nfunction getLoggedInUser() {\n  const user = sessionStorage.getItem(\"user\");\n  return user ? JSON.parse(user) : null;\n}\n\n/**\n * Updates the header's navigation with either user info or login/register buttons.\n */\nfunction updateHeaderNav() {\n  // This targets a new, specific element in the header for dynamic content\n  const userNav = document.getElementById(\"user-nav-links\");\n  if (!userNav) return;\n\n  const user = getLoggedInUser();\n\n  if (user) {\n    // If a user is logged in, show their name and a logout button\n    userNav.innerHTML = `\n      <div class=\"user-menu\">\n        <span class=\"username\">${user.username}</span>\n        <button id=\"logout-btn\" class=\"btn btn-primary\">Logout</button>\n      </div>\n    `;\n    // Add the event listener for the newly created logout button\n    document\n      .getElementById(\"logout-btn\")\n      .addEventListener(\"click\", async () => {\n        await api.logout();\n        sessionStorage.removeItem(\"user\");\n        window.location.href = \"/\"; // Redirect to home after logout\n      });\n  } else {\n    // If no user is logged in, show the login and register buttons\n    userNav.innerHTML = `\n      <a href=\"./login.html\" class=\"btn btn-primary\">Login</a>\n      <a href=\"./register.html\" class=\"btn btn-primary\">Register</a>\n    `;\n  }\n}\n\n// When the page content is loaded, run the function to update the header.\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  updateHeaderNav();\n});\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$a35ebdc10bcdb39c$var$request","url","options","response","fetch","$a35ebdc10bcdb39c$var$BASE_URL","ok","errorData","json","message","status","error","console","$a35ebdc10bcdb39c$export$596d806903d1f59e","$a35ebdc10bcdb39c$export$6503ec6e8aabbaf","$a35ebdc10bcdb39c$export$a0973bcfe11b05c9","$a35ebdc10bcdb39c$export$3790dc04c854c4c9","$a35ebdc10bcdb39c$export$e1bef8d96c7ba086","$a35ebdc10bcdb39c$export$101f7e1827697acc","$a35ebdc10bcdb39c$export$431458ae9af46678","$a35ebdc10bcdb39c$export$7a0f33e8df10bd94","email","password","method","headers","body","JSON","stringify","username","categoryId","postData","postId","$e1C8v","document","addEventListener","$faccf8cc833cb81b$var$updateHeaderNav","userNav","getElementById","user","$faccf8cc833cb81b$var$getLoggedInUser","sessionStorage","getItem","parse","innerHTML","logout","removeItem","window","location","href"],"version":3,"file":"about.88d406c7.js.map"}