{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,SCEA,MAAM,EAAW,SAAS,cAAc,CAAC,aACnC,EAAwB,SAAS,cAAc,CAAC,iBAChD,EAAa,SAAS,cAAc,CAAC,gBAE3C,SAAS,IACP,IAAM,EAAO,eAAe,OAAO,CAAC,QACpC,OAAO,EAAO,KAAK,KAAK,CAAC,GAAQ,IACnC,CAyCA,eAAe,EAAU,EAAa,IAAI,EACxC,GAAI,CACF,IAAM,EAAQ,MAAM,EAAA,QAAA,CAAa,IACjC,AA1CJ,SAAqB,CAAK,EACxB,IAAM,EAAO,IAEb,GADA,EAAS,SAAS,CAAG,GACjB,CAAC,GAAS,AAAiB,IAAjB,EAAM,MAAM,CAAQ,CAChC,EAAS,SAAS,CAAG,2BACrB,MACF,CAEA,EAAM,OAAO,CAAC,AAAC,IACb,IAAM,EAAW,IAAI,KAAK,EAAK,SAAS,EAAE,kBAAkB,GAEtD,EACJ,EAAK,UAAU,EACX,IAAI,AAAC,GAAQ,CAAC,2BAA2B,EAAE,EAAI,IAAI,CAAC,OAAO,CAAC,EAC7D,KAAK,KAAO,GAEX,EAAW,SAAS,aAAa,CAAC,KACxC,CAAA,EAAS,SAAS,CAAG,YACrB,EAAS,SAAS,CAAG;A;AAEU,mCAAA,EAAE,EAAK,EAAE,CAAC,EAAE,EAAE,EAAK,KAAK,CAAC;A;A;AAG3C,iBAAA,EAAE,EAAK,IAAI,EAAE,UAAY,UAAU,IAAI,EAAE,EAAS;A;A;AAGxD,WAAA,EAAE,EAAK,OAAO,CAAC,SAAS,CAAC,EAAG,KAAK;A;A;AAGP,qCAAA,EAAE,EAAe;A;AAE5C,UAAA,EAAE,GAAQ,EAAK,EAAE,GAAK,EAAK,MAAM,CAAG,CAAC,4BAA4B,EAAE,EAAK,EAAE,CAAC,sBAAsB,CAAC,CAAG;A;A;AAG3G,IAAA,CAAC,CACD,EAAS,WAAW,CAAC,EACvB,EACF,EAKgB,EACd,CAAE,MAAO,EAAO,CACd,EAAS,SAAS,CAChB,uDACJ,CACF,CAEA,eAAe,IACb,GAAI,CACF,IAAM,EAAa,MAAM,EAAzB,aAAA,EACA,CAAA,EAAsB,SAAS,CAAG,GAClC,EAAW,OAAO,CAAC,AAAC,IAClB,IAAM,EAAM,SAAS,aAAa,CAAC,OACnC,CAAA,EAAI,SAAS,CAAG,eAChB,EAAI,WAAW,CAAG,EAAI,IAAI,CAC1B,EAAI,OAAO,CAAC,UAAU,CAAG,EAAI,EAAE,CAC/B,EAAI,gBAAgB,CAAC,QAAS,KAE5B,SACG,gBAAgB,CAAC,kCACjB,OAAO,CAAC,AAAC,GAAM,EAAE,SAAS,CAAC,MAAM,CAAC,WACrC,EAAI,SAAS,CAAC,GAAG,CAAC,UAClB,EAAU,EAAI,EAAE,CAClB,GACA,EAAsB,WAAW,CAAC,EACpC,EACF,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,4BAA6B,EAC7C,CACF,CAEA,SAAS,gBAAgB,CAAC,mBAAoB,KACxC,KACF,CAAA,EAAW,KAAK,CAAC,OAAO,CAAG,cAD7B,EAGA,IACA,GACF","sources":["<anon>","src/client/assets/js/main.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire6684\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire6684\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $e1C8v = parcelRequire(\"e1C8v\");\nconst $fa97e029cbe00ca4$var$postList = document.getElementById(\"post-list\");\nconst $fa97e029cbe00ca4$var$categoryTagsContainer = document.getElementById(\"category-tags\");\nconst $fa97e029cbe00ca4$var$newPostBtn = document.getElementById(\"new-post-btn\");\nfunction $fa97e029cbe00ca4$var$getLoggedInUser() {\n    const user = sessionStorage.getItem(\"user\");\n    return user ? JSON.parse(user) : null;\n}\nfunction $fa97e029cbe00ca4$var$renderPosts(posts) {\n    const user = $fa97e029cbe00ca4$var$getLoggedInUser();\n    $fa97e029cbe00ca4$var$postList.innerHTML = \"\"; // Clear existing posts\n    if (!posts || posts.length === 0) {\n        $fa97e029cbe00ca4$var$postList.innerHTML = \"<li>No posts found.</li>\";\n        return;\n    }\n    posts.forEach((post)=>{\n        const postDate = new Date(post.createdAt).toLocaleDateString();\n        // The backend needs to include categories on the post object\n        const categoriesHtml = post.categories?.map((cat)=>`<span class=\"category-tag\">${cat.name}</span>`).join(\"\") || \"\";\n        const postCard = document.createElement(\"li\");\n        postCard.className = \"post-card\";\n        postCard.innerHTML = `\n      <div class=\"post-card-header\">\n        <h2><a href=\"/post.html?id=${post.id}\">${post.title}</a></h2>\n      </div>\n      <div class=\"post-card-meta\">\n        <span>By ${post.user?.username || 'Unknown'} on ${postDate}</span>\n      </div>\n      <div class=\"post-card-content\">\n        <p>${post.content.substring(0, 200)}...</p>\n      </div>\n      <div class=\"post-card-footer\">\n        <div class=\"post-categories\">${categoriesHtml}</div>\n        <div class=\"post-actions\">\n          ${user && user.id === post.userId ? `<a href=\"/edit-post.html?id=${post.id}\" class=\"btn\">Edit</a>` : \"\"}\n        </div>\n      </div>\n    `;\n        $fa97e029cbe00ca4$var$postList.appendChild(postCard);\n    });\n}\nasync function $fa97e029cbe00ca4$var$loadPosts(categoryId = null) {\n    try {\n        const posts = await $e1C8v.getPosts(categoryId);\n        $fa97e029cbe00ca4$var$renderPosts(posts);\n    } catch (error) {\n        $fa97e029cbe00ca4$var$postList.innerHTML = `<li>Error loading posts. Please try again later.</li>`;\n    }\n}\nasync function $fa97e029cbe00ca4$var$loadCategories() {\n    try {\n        const categories = await $e1C8v.getCategories();\n        $fa97e029cbe00ca4$var$categoryTagsContainer.innerHTML = \"\";\n        categories.forEach((cat)=>{\n            const tag = document.createElement(\"span\");\n            tag.className = \"category-tag\";\n            tag.textContent = cat.name;\n            tag.dataset.categoryId = cat.id;\n            tag.addEventListener(\"click\", ()=>{\n                // Handle active state for styling\n                document.querySelectorAll(\".category-filter .category-tag\").forEach((t)=>t.classList.remove(\"active\"));\n                tag.classList.add(\"active\");\n                $fa97e029cbe00ca4$var$loadPosts(cat.id);\n            });\n            $fa97e029cbe00ca4$var$categoryTagsContainer.appendChild(tag);\n        });\n    } catch (error) {\n        console.error(\"Failed to load categories\", error);\n    }\n}\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    if ($fa97e029cbe00ca4$var$getLoggedInUser()) $fa97e029cbe00ca4$var$newPostBtn.style.display = \"inline-block\";\n    $fa97e029cbe00ca4$var$loadPosts();\n    $fa97e029cbe00ca4$var$loadCategories();\n});\n\n\n//# sourceMappingURL=client.308ec4b4.js.map\n","import * as api from './api.js';\n\nconst postList = document.getElementById(\"post-list\");\nconst categoryTagsContainer = document.getElementById(\"category-tags\");\nconst newPostBtn = document.getElementById(\"new-post-btn\");\n\nfunction getLoggedInUser() {\n  const user = sessionStorage.getItem(\"user\");\n  return user ? JSON.parse(user) : null;\n}\n\nfunction renderPosts(posts) {\n  const user = getLoggedInUser();\n  postList.innerHTML = \"\"; // Clear existing posts\n  if (!posts || posts.length === 0) {\n    postList.innerHTML = \"<li>No posts found.</li>\";\n    return;\n  }\n\n  posts.forEach((post) => {\n    const postDate = new Date(post.createdAt).toLocaleDateString();\n    // The backend needs to include categories on the post object\n    const categoriesHtml =\n      post.categories\n        ?.map((cat) => `<span class=\"category-tag\">${cat.name}</span>`)\n        .join(\"\") || \"\";\n\n    const postCard = document.createElement(\"li\");\n    postCard.className = \"post-card\";\n    postCard.innerHTML = `\n      <div class=\"post-card-header\">\n        <h2><a href=\"/post.html?id=${post.id}\">${post.title}</a></h2>\n      </div>\n      <div class=\"post-card-meta\">\n        <span>By ${post.user?.username || 'Unknown'} on ${postDate}</span>\n      </div>\n      <div class=\"post-card-content\">\n        <p>${post.content.substring(0, 200)}...</p>\n      </div>\n      <div class=\"post-card-footer\">\n        <div class=\"post-categories\">${categoriesHtml}</div>\n        <div class=\"post-actions\">\n          ${user && user.id === post.userId ? `<a href=\"/edit-post.html?id=${post.id}\" class=\"btn\">Edit</a>` : \"\"}\n        </div>\n      </div>\n    `;\n    postList.appendChild(postCard);\n  });\n}\n\nasync function loadPosts(categoryId = null) {\n  try {\n    const posts = await api.getPosts(categoryId);\n    renderPosts(posts);\n  } catch (error) {\n    postList.innerHTML =\n      `<li>Error loading posts. Please try again later.</li>`;\n  }\n}\n\nasync function loadCategories() {\n  try {\n    const categories = await api.getCategories();\n    categoryTagsContainer.innerHTML = \"\";\n    categories.forEach((cat) => {\n      const tag = document.createElement(\"span\");\n      tag.className = \"category-tag\";\n      tag.textContent = cat.name;\n      tag.dataset.categoryId = cat.id;\n      tag.addEventListener(\"click\", () => {\n        // Handle active state for styling\n        document\n          .querySelectorAll(\".category-filter .category-tag\")\n          .forEach((t) => t.classList.remove(\"active\"));\n        tag.classList.add(\"active\");\n        loadPosts(cat.id);\n      });\n      categoryTagsContainer.appendChild(tag);\n    });\n  } catch (error) {\n    console.error(\"Failed to load categories\", error);\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  if (getLoggedInUser()) {\n    newPostBtn.style.display = \"inline-block\";\n  }\n  loadPosts();\n  loadCategories();\n});\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$e1C8v","$fa97e029cbe00ca4$var$postList","document","getElementById","$fa97e029cbe00ca4$var$categoryTagsContainer","$fa97e029cbe00ca4$var$newPostBtn","$fa97e029cbe00ca4$var$getLoggedInUser","user","sessionStorage","getItem","JSON","parse","$fa97e029cbe00ca4$var$loadPosts","categoryId","posts","getPosts","$fa97e029cbe00ca4$var$renderPosts","innerHTML","length","forEach","post","postDate","Date","createdAt","toLocaleDateString","categoriesHtml","categories","map","cat","name","join","postCard","createElement","className","title","username","content","substring","userId","appendChild","error","$fa97e029cbe00ca4$var$loadCategories","getCategories","tag","textContent","dataset","addEventListener","querySelectorAll","t","classList","remove","add","console","style","display"],"version":3,"file":"client.308ec4b4.js.map"}