{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,SCEA,MAAM,EAAkB,SAAS,cAAc,CAAC,qBAC1C,EAAY,SAAS,aAAa,CAAC,SAyCzC,SAAS,gBAAgB,CAAC,mBAAoB,UAE5C,IAAM,EAAS,AADA,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM,EACnC,GAAG,CAAC,MAE1B,GAAI,CAAC,EAAQ,CACX,EAAgB,SAAS,CAAG,2BAC5B,MACF,CAEA,GAAI,KA5Cc,EA6CH,MAAM,EAAA,WAAA,CAAgB,EA5CrC,CAAA,EAAU,WAAW,CAAG,CAAA,EAAG,EAAK,KAAK,CAAC,eAAe,CAAC,CAEtD,IAAM,EAAW,IAAI,KAAK,EAAK,SAAS,EAAE,kBAAkB,CAAC,QAAS,CACpE,KAAM,UACN,MAAO,OACP,IAAK,SACP,GAEM,EACJ,EAAK,UAAU,EACX,IAAI,AAAC,GAAQ,CAAC,2BAA2B,EAAE,EAAI,IAAI,CAAC,OAAO,CAAC,EAC7D,KAAK,KAAO,0BAGX,EAAmB,EAAK,OAAO,CAAC,OAAO,CAAC,MAAO,SAErD,CAAA,EAAgB,SAAS,CAAG;A;AAEpB,UAAA,EAAE,EAAK,KAAK,CAAC;A;AAEN,iBAAA,EAAE,EAAK,IAAI,EAAE,UAAY,UAAU,IAAI,EAAE,EAAS;A;A;A;AAI1D,SAAA,EAAE,EAAiB;A;A;A;AAIO,mCAAA,EAAE,EAAe;A;AAElD,EAAA,CAAC,AAgBD,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,uBAAwB,GACtC,EAAgB,SAAS,CAAG,CAAC,WAAW,EAAE,EAAM,OAAO,CAAC,KAAK,CAAC,AAChE,CACF","sources":["<anon>","src/client/assets/js/single-post.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire6684\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire6684\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $e1C8v = parcelRequire(\"e1C8v\");\nconst $340be1ab43ea3123$var$postContentArea = document.getElementById(\"post-content-area\");\nconst $340be1ab43ea3123$var$pageTitle = document.querySelector(\"title\");\n/**\n * Renders the full post details onto the page.\n * @param {object} post - The post object from the API.\n */ function $340be1ab43ea3123$var$renderPost(post) {\n    $340be1ab43ea3123$var$pageTitle.textContent = `${post.title} - Express Blog`;\n    const postDate = new Date(post.createdAt).toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n    });\n    const categoriesHtml = post.categories?.map((cat)=>`<span class=\"category-tag\">${cat.name}</span>`).join(\"\") || \"No categories assigned.\";\n    // Use .replace to turn newline characters into <br> tags for proper formatting\n    const formattedContent = post.content.replace(/\\n/g, \"<br />\");\n    $340be1ab43ea3123$var$postContentArea.innerHTML = `\n    <div class=\"post-header\">\n      <h1>${post.title}</h1>\n      <div class=\"post-meta\">\n        <span>By ${post.User?.username || \"Unknown\"} on ${postDate}</span>\n      </div>\n    </div>\n    <div class=\"post-body\">\n      <p>${formattedContent}</p>\n    </div>\n    <div class=\"post-footer\">\n      <h3>Categories</h3>\n      <div class=\"post-categories\">${categoriesHtml}</div>\n    </div>\n  `;\n}\n// On page load, get the post ID from the URL and fetch the data.\ndocument.addEventListener(\"DOMContentLoaded\", async ()=>{\n    const params = new URLSearchParams(window.location.search);\n    const postId = params.get(\"id\");\n    if (!postId) {\n        $340be1ab43ea3123$var$postContentArea.innerHTML = \"<h1>Post not found.</h1>\";\n        return;\n    }\n    try {\n        const post = await $e1C8v.getPostById(postId);\n        $340be1ab43ea3123$var$renderPost(post);\n    } catch (error) {\n        console.error(\"Failed to load post:\", error);\n        $340be1ab43ea3123$var$postContentArea.innerHTML = `<h1>Error: ${error.message}</h1>`;\n    }\n});\n\n\n//# sourceMappingURL=post.d1bdd28a.js.map\n","import * as api from \"./api.js\";\n\nconst postContentArea = document.getElementById(\"post-content-area\");\nconst pageTitle = document.querySelector(\"title\");\n\n/**\n * Renders the full post details onto the page.\n * @param {object} post - The post object from the API.\n */\nfunction renderPost(post) {\n  pageTitle.textContent = `${post.title} - Express Blog`;\n\n  const postDate = new Date(post.createdAt).toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n\n  const categoriesHtml =\n    post.categories\n      ?.map((cat) => `<span class=\"category-tag\">${cat.name}</span>`)\n      .join(\"\") || \"No categories assigned.\";\n\n  // Use .replace to turn newline characters into <br> tags for proper formatting\n  const formattedContent = post.content.replace(/\\n/g, \"<br />\");\n\n  postContentArea.innerHTML = `\n    <div class=\"post-header\">\n      <h1>${post.title}</h1>\n      <div class=\"post-meta\">\n        <span>By ${post.User?.username || \"Unknown\"} on ${postDate}</span>\n      </div>\n    </div>\n    <div class=\"post-body\">\n      <p>${formattedContent}</p>\n    </div>\n    <div class=\"post-footer\">\n      <h3>Categories</h3>\n      <div class=\"post-categories\">${categoriesHtml}</div>\n    </div>\n  `;\n}\n\n// On page load, get the post ID from the URL and fetch the data.\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  const params = new URLSearchParams(window.location.search);\n  const postId = params.get(\"id\");\n\n  if (!postId) {\n    postContentArea.innerHTML = \"<h1>Post not found.</h1>\";\n    return;\n  }\n\n  try {\n    const post = await api.getPostById(postId);\n    renderPost(post);\n  } catch (error) {\n    console.error(\"Failed to load post:\", error);\n    postContentArea.innerHTML = `<h1>Error: ${error.message}</h1>`;\n  }\n});\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$e1C8v","$340be1ab43ea3123$var$postContentArea","document","getElementById","$340be1ab43ea3123$var$pageTitle","querySelector","addEventListener","postId","params","URLSearchParams","window","location","search","get","innerHTML","post","getPostById","textContent","title","postDate","Date","createdAt","toLocaleDateString","year","month","day","categoriesHtml","categories","map","cat","name","join","formattedContent","content","replace","User","username","error","console","message"],"version":3,"file":"post.d1bdd28a.js.map"}